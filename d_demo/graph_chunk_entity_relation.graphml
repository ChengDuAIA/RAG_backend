<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d6" for="edge" attr.name="source_id" attr.type="string" />
  <key id="d5" for="edge" attr.name="description" attr.type="string" />
  <key id="d4" for="edge" attr.name="weight" attr.type="double" />
  <key id="d3" for="node" attr.name="clusters" attr.type="string" />
  <key id="d2" for="node" attr.name="source_id" attr.type="string" />
  <key id="d1" for="node" attr.name="description" attr.type="string" />
  <key id="d0" for="node" attr.name="entity_type" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="&quot;GRAPHRAG&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"GraphRAG is a framework that facilitates building retrieval-augmented generation (RAG) systems by combining vector databases, knowledge graphs, and embedding functions."&lt;SEP&gt;"GraphRAG is a powerful tool with a difficult official implementation, which nano-graphrag aims to simplify."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf&lt;SEP&gt;chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;NANO-GRAPHRAG&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"nano-graphrag is a smaller, faster, cleaner implementation of GraphRAG, offering simplified functionality for developers."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
      <data key="d3">[{"level": 0, "cluster": 2}]</data>
    </node>
    <node id="&quot;PYTHON&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Python is the programming language required to run nano-graphrag, with a version of 3.9.11 or later."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
      <data key="d3">[{"level": 0, "cluster": 2}]</data>
    </node>
    <node id="&quot;PYPI&quot;">
      <data key="d0">"ORGANIZATION"</data>
      <data key="d1">"PyPi is a repository where nano-graphrag can be installed from."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
      <data key="d3">[{"level": 0, "cluster": 2}]</data>
    </node>
    <node id="&quot;CHARLES DICKENS&quot;">
      <data key="d0">"PERSON"</data>
      <data key="d1">"Charles Dickens is the author of 'A Christmas Carol', a text used within the guide to demonstrate nano-graphrag's abilities."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
      <data key="d3">[{"level": 0, "cluster": 2}]</data>
    </node>
    <node id="&quot;OPENAI&quot;">
      <data key="d0">"ORGANIZATION"</data>
      <data key="d1">"OpenAI is involved in providing API keys used for running models with nano-graphrag."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;A CHRISTMAS CAROL&quot;">
      <data key="d0">"EVENT"</data>
      <data key="d1">"A Christmas Carol is a book used as an example to demonstrate the functionality of nano-graphrag."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;OLLAMA&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Ollama is mentioned as an LLM or Embedding Model alternative when using nano-graphrag."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;DEEPSEEK&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"DeepSeek is listed as one of the LLM technologies available for use with nano-graphrag."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;SENTENCE-TRANSFORMERS&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Sentence-transformers is mentioned as an Embedding option within nano-graphrag."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;NANO-VECTORDB&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Nano-VectorDB is the default vector storage backend utilized in the framework for indexing embeddings."&lt;SEP&gt;"nano-vectordb is a built-in vector database within the nano-graphrag system."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf&lt;SEP&gt;chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 1}]</data>
    </node>
    <node id="&quot;HNSWLIB&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"HNSWLib is an optional vector storage backend supported by the framework for indexing embeddings."&lt;SEP&gt;"hnswlib is a vector database option that is integrated into nano-graphrag, available with examples."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf&lt;SEP&gt;chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;MILVUS LITE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Milvus Lite is referenced as a vector database technology option within nano-graphrag examples."</data>
      <data key="d2">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </node>
    <node id="&quot;MILVUS-LITE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Milvus-Lite is referred to in an example using it as a backend for storage related to vector databases, though it is not available on Windows."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;NETWORKX&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"NetworkX is the default graph storage backend used in the framework, providing a robust system for handling knowledge graphs."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;BASEKVSTORAGE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"BaseKVStorage is a storage component interface in the framework designed for storing key-json pairs of data, with a disk file storage as the default backend."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;BASEVECTORSTORAGE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"BaseVectorStorage is an interface for vector storage in the framework, used for indexing embeddings with various backends."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;BASEGRAPHSTORAGE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"BaseGraphStorage is an interface for graph storage in the framework, utilizing different backend implementations such as NetworkX."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;EMBEDDING FUNCTION&quot;">
      <data key="d0">"CONCEPT"</data>
      <data key="d1">"Embedding Function refers to the method used to compute vector representations of data, which can be custom-defined within the framework."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 0}]</data>
    </node>
    <node id="&quot;KEY-STRING-VALUE-JSON STORAGE&quot;">
      <data key="d0">"TECHNOLOGY"</data>
      <data key="d1">"Key-String-Value-JSON Storage refers to the storage mechanism for serialization and deserialization of data in key-json format."</data>
      <data key="d2">chunk-f776017cd3290a83f17048e375aaaa14</data>
      <data key="d3">[{"level": 0, "cluster": 1}]</data>
    </node>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;NANO-GRAPHRAG&quot;">
      <data key="d4">9.0</data>
      <data key="d5">"nano-graphrag provides a simplified and more accessible version of the GraphRAG tool."</data>
      <data key="d6">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;NANO-VECTORDB&quot;">
      <data key="d4">8.0</data>
      <data key="d5">"GraphRAG utilizes Nano-VectorDB as the default backend for vector storage to index embeddings."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;HNSWLIB&quot;">
      <data key="d4">7.0</data>
      <data key="d5">"GraphRAG includes HNSWLib as an optional vector storage backend for indexing embeddings."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;MILVUS-LITE&quot;">
      <data key="d4">6.0</data>
      <data key="d5">"GraphRAG offers an example of using Milvus-Lite as a storage backend for vector databases."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;NETWORKX&quot;">
      <data key="d4">9.0</data>
      <data key="d5">"GraphRAG uses NetworkX as the default graph storage backend to handle knowledge graphs."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;BASEKVSTORAGE&quot;">
      <data key="d4">7.0</data>
      <data key="d5">"BaseKVStorage is a component used in the GraphRAG framework for storing key-json pairs, with an interface for customization."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;BASEVECTORSTORAGE&quot;">
      <data key="d4">8.0</data>
      <data key="d5">"BaseVectorStorage serves as an interface for vector storage, allowing GraphRAG to handle embeddings with various backends."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;BASEGRAPHSTORAGE&quot;">
      <data key="d4">8.0</data>
      <data key="d5">"BaseGraphStorage provides a mechanism for graph storage in GraphRAG, supporting knowledge graph operations."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;GRAPHRAG&quot;" target="&quot;EMBEDDING FUNCTION&quot;">
      <data key="d4">9.0</data>
      <data key="d5">"Embedding Functions in GraphRAG can be customized to generate embeddings, central to the framework's functioning."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
    <edge source="&quot;NANO-GRAPHRAG&quot;" target="&quot;PYTHON&quot;">
      <data key="d4">8.0</data>
      <data key="d5">"nano-graphrag requires Python 3.9.11 or higher to operate."</data>
      <data key="d6">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </edge>
    <edge source="&quot;NANO-GRAPHRAG&quot;" target="&quot;PYPI&quot;">
      <data key="d4">8.0</data>
      <data key="d5">"nano-graphrag can be installed from the PyPi repository."</data>
      <data key="d6">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </edge>
    <edge source="&quot;NANO-GRAPHRAG&quot;" target="&quot;CHARLES DICKENS&quot;">
      <data key="d4">7.0</data>
      <data key="d5">"Charles Dickens' work, 'A Christmas Carol', is used in a demonstration of nano-graphrag's functionality."</data>
      <data key="d6">chunk-70b6eb2dad0016c5d04dd7257776efcf</data>
    </edge>
    <edge source="&quot;NANO-VECTORDB&quot;" target="&quot;KEY-STRING-VALUE-JSON STORAGE&quot;">
      <data key="d4">6.0</data>
      <data key="d5">"Key-String-Value-JSON Storage is used by Nano-VectorDB for handling key-json data serialization and deserialization."</data>
      <data key="d6">chunk-f776017cd3290a83f17048e375aaaa14</data>
    </edge>
  </graph>
</graphml>
